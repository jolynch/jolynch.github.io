<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Joey Lynch&#39;s Site</title>
    <link>https://jolynch.github.io/</link>
    <description>Recent content on Joey Lynch&#39;s Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 Feb 2019 17:22:58 -0800</lastBuildDate>
    
	<atom:link href="https://jolynch.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Projects</title>
      <link>https://jolynch.github.io/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jolynch.github.io/projects/</guid>
      <description>Below are some of my projects roughly categorized by area.
Distributed Systems  synapse and nerve service mesh aka SmartStack. I help maintain and have contributed significant features to Airbnb&amp;rsquo;s service mesh, including improving the scalability of the system by multiple orders of magnitude (Yelp ran tens of thousands of containers across a global network with full global service discovery), and extending Synapse to be fully pluggable and support any proxy.</description>
    </item>
    
    <item>
      <title>Talks</title>
      <link>https://jolynch.github.io/talks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jolynch.github.io/talks/</guid>
      <description>Below are a collection of conference talks or other presentations that I&amp;rsquo;ve given, typically related to distributed systems or other software engineering topics:
 Iterating on Stateful Services in the Cloud (2018): A talk at re:Invent 2018 about how Netflix manages stateful services (such as datastores or databases) in the AWS cloud. Contains a lot of concrete advice for managing state in AWS. Repair Service and Cassandra (2018): Part of Netflix&amp;rsquo;s OSS Meetup about Polyglot Persistence.</description>
    </item>
    
    <item>
      <title>Publications</title>
      <link>https://jolynch.github.io/publications/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jolynch.github.io/publications/</guid>
      <description>I&amp;rsquo;ve mostly written blog posts and whitepapers, mostly for employers. I&amp;rsquo;ve included links here in case they might be interesting.
 Cassandra Availability with Virtual Nodes (2018): A whitepaper I authored with Josh Snyder that attempted to formally model Cassandra&amp;rsquo;s availability under different numbers of tokens per node. TLDR: use no more than 4 tokens if you want high availability in a Dynamo style database. The paper is based on this notebook Taking Zero Downtime Load Balancing even Further (2017): In this post I showed how Yelp had evolved their highly available and scalable service mesh based on SmartStack to use NGINX and HAProxy and get the best of all worlds.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://jolynch.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jolynch.github.io/about/</guid>
      <description>Hi, my name is Joey Lynch. I mostly hack on open source distributed systems problems, but also enjoy economics, politics, and debate.
I should have more info up soon.</description>
    </item>
    
    <item>
      <title>Supermarkets And Efficient Queueing: Part 2</title>
      <link>https://jolynch.github.io/posts/supermarkets_and_efficient_queueing_part_2/</link>
      <pubDate>Wed, 20 Feb 2019 00:00:00 -0100</pubDate>
      
      <guid>https://jolynch.github.io/posts/supermarkets_and_efficient_queueing_part_2/</guid>
      <description>This post continues the two part series on queueing theory and understanding computer systems using supermarkets.
 Part 1: Basics of queueing theory and minimizing latency. Part 2: More advanced techniques past optimizing latency.  We learned in Part 1 that we should keep our queues together and if we must form separate queues we should always try to pick the shortest queue if we can. In this post we will see that isn&amp;rsquo;t quite true if you care about metrics other than throughput.</description>
    </item>
    
    <item>
      <title>Supermarkets And Efficient Queueing: Part 1</title>
      <link>https://jolynch.github.io/posts/supermarkets_and_efficient_queueing_part_1/</link>
      <pubDate>Tue, 19 Feb 2019 12:00:00 +0000</pubDate>
      
      <guid>https://jolynch.github.io/posts/supermarkets_and_efficient_queueing_part_1/</guid>
      <description>I&amp;rsquo;d like to kickoff the &amp;ldquo;distributed systems as food service analogy&amp;rdquo; series with the basics. In this two part series I cover the basics of queuing theory , and how we can understand it with the help of your every day supermarket or grocery store.
 Part 1: Basics of queueing theory and minimizing latency. Part 2: More advanced techniques past optimizing latency.  Why should software engineers care about Queueing Theory?</description>
    </item>
    
    <item>
      <title>Purpose of this Blog</title>
      <link>https://jolynch.github.io/posts/purpose_of_blog/</link>
      <pubDate>Thu, 10 Jan 2019 11:30:16 -0800</pubDate>
      
      <guid>https://jolynch.github.io/posts/purpose_of_blog/</guid>
      <description>I figured it was time to start a proper personal/tech blog given how much I enjoy writing about the crazy fun and wierd distributed systems problems that I work on.
Initially I am planning on writing up my current rants on high performance software systems as understood through food service analogies, but I imagine it&amp;rsquo;ll evolve from there to just talking about cool systems problems I work on every day.</description>
    </item>
    
  </channel>
</rss>